
分布式系统中,我们广泛运用消息中间件进行系统间的数据交换,便于异步解耦。


JMS 即 java message service 是为java提供了一种创建、发送、接收消息的通用方法。
可以将复杂的系统进行业务分离，变成灵活的高度解耦合的布局。
同时对我们的日常业务需求开发，提供了非常灵活的业务解决方案。
比如缴费还款送积分，送积分的业务逻辑不能影响到缴费还款的业务逻辑，
所以最好的，就是缴费/还款逻辑执行完成之后，通过一种方式告诉积分系统，给用户发送积分，发送积分的结果不要影响到复杂的缴费还款的过程。
这种情况下，采用jms进行异步处理，便是一个很好的选择。
要使用消息的方式来进行系统交互，我们需要一个消息中间平台，来进行消息的接受转发，同时处理复杂的消息持久化等问题。
本文我们采用activemq来做实验。这样的架构下，我们的系统通常会变成如下架构：
消息产生者 -> 消息中心 -> 消息消费者

JMS支持两种消息传播：PTP 和 PUB/SUB
PTP ： 点对点发送。消息的发送方将消息放入管道中，消息的接收方从管道中取出消息并处理。
PUB/SUB ： 发布/订阅方式。消息的发布者将自己的主题放入消息中心，同时进行消息投递，消息订阅者只获取自己订阅的消息。

Jms的消息分为三部分：消息头、消息属性、消息体

ConnectionFacatory：被管理的对象，由客户端（发布者/接受者）使用，用来创建一个链接。
Connection：提供一个JMS消息的活动链接。
Destination：封装了消息目的地，或者主题类型。
Session：一个用来发送和接受消息的线上上下文。
MessageProducer：由session创建的，用来发送消息的对象。
MessageConsumer：由session创建的用来接受消息的对象。
